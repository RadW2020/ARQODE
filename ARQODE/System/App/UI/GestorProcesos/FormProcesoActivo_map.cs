using System; 
using TControls; 
using Newtonsoft.Json.Linq;

namespace TLogic.ARQODE_UI.GestorProcesos
 { 
public class CFormProcesoActivo
 { 
public static String _JSON { get { return ""; } }
public JObject MappedView { get { return JObject.Parse(System.Text.UTF8Encoding.UTF8.GetString(Convert.FromBase64String(_JSON))); } } 
public System.Windows.Forms.UserControl FormProcesoActivo;
public CView.CtrlStruct FormProcesoActivo_cstr;
public object FormProcesoActivo_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("GestorProcesos.FormProcesoActivo")[var] = value; 
	return (object)view.CtrlVars("GestorProcesos.FormProcesoActivo")[var];
}
public System.Windows.Forms.Panel PFormProcesoActivo;
public CView.CtrlStruct PFormProcesoActivo_cstr;
public object PFormProcesoActivo_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PFormProcesoActivo")[var] = value; 
	return (object)view.CtrlVars("PFormProcesoActivo")[var];
}
public System.Windows.Forms.TextBox TBDescription;
public CView.CtrlStruct TBDescription_cstr;
public object TBDescription_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("TBDescription")[var] = value; 
	return (object)view.CtrlVars("TBDescription")[var];
}
public System.Windows.Forms.DataGridView LConfig;
public CView.CtrlStruct LConfig_cstr;
public object LConfig_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("LConfig")[var] = value; 
	return (object)view.CtrlVars("LConfig")[var];
}
public System.Windows.Forms.DataGridView LOutputs;
public CView.CtrlStruct LOutputs_cstr;
public object LOutputs_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("LOutputs")[var] = value; 
	return (object)view.CtrlVars("LOutputs")[var];
}
public System.Windows.Forms.DataGridView LInputs;
public CView.CtrlStruct LInputs_cstr;
public object LInputs_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("LInputs")[var] = value; 
	return (object)view.CtrlVars("LInputs")[var];
}
public System.Windows.Forms.Button BSave;
public CView.CtrlStruct BSave_cstr;
public object BSave_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("BSave")[var] = value; 
	return (object)view.CtrlVars("BSave")[var];
}
public System.Windows.Forms.Label label10;
public CView.CtrlStruct label10_cstr;
public object label10_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("label10")[var] = value; 
	return (object)view.CtrlVars("label10")[var];
}
public System.Windows.Forms.Label label9;
public CView.CtrlStruct label9_cstr;
public object label9_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("label9")[var] = value; 
	return (object)view.CtrlVars("label9")[var];
}
public System.Windows.Forms.Label label8;
public CView.CtrlStruct label8_cstr;
public object label8_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("label8")[var] = value; 
	return (object)view.CtrlVars("label8")[var];
}
public System.Windows.Forms.Label LName;
public CView.CtrlStruct LName_cstr;
public object LName_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("LName")[var] = value; 
	return (object)view.CtrlVars("LName")[var];
}
public System.Windows.Forms.Label label7;
public CView.CtrlStruct label7_cstr;
public object label7_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("label7")[var] = value; 
	return (object)view.CtrlVars("label7")[var];
}
public System.Windows.Forms.Label label4;
public CView.CtrlStruct label4_cstr;
public object label4_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("label4")[var] = value; 
	return (object)view.CtrlVars("label4")[var];
}
public System.Windows.Forms.Panel PTop;
public CView.CtrlStruct PTop_cstr;
public object PTop_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PTop")[var] = value; 
	return (object)view.CtrlVars("PTop")[var];
}
public System.Windows.Forms.Panel PViews;
public CView.CtrlStruct PViews_cstr;
public object PViews_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PViews")[var] = value; 
	return (object)view.CtrlVars("PViews")[var];
}
public System.Windows.Forms.Panel PContentViewsVars;
public CView.CtrlStruct PContentViewsVars_cstr;
public object PContentViewsVars_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PContentViewsVars")[var] = value; 
	return (object)view.CtrlVars("PContentViewsVars")[var];
}
public System.Windows.Forms.TreeView TV_ViewsVars;
public CView.CtrlStruct TV_ViewsVars_cstr;
public object TV_ViewsVars_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("TV_ViewsVars")[var] = value; 
	return (object)view.CtrlVars("TV_ViewsVars")[var];
}
public System.Windows.Forms.ContextMenuStrip contextMenu_ViewVars;
public CView.CtrlStruct contextMenu_ViewVars_cstr;
public object contextMenu_ViewVars_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("contextMenu_ViewVars")[var] = value; 
	return (object)view.CtrlVars("contextMenu_ViewVars")[var];
}
public System.Windows.Forms.Panel PTopViews;
public CView.CtrlStruct PTopViews_cstr;
public object PTopViews_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PTopViews")[var] = value; 
	return (object)view.CtrlVars("PTopViews")[var];
}
public System.Windows.Forms.Label label1;
public CView.CtrlStruct label1_cstr;
public object label1_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("label1")[var] = value; 
	return (object)view.CtrlVars("label1")[var];
}
public System.Windows.Forms.Panel PGlobals;
public CView.CtrlStruct PGlobals_cstr;
public object PGlobals_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PGlobals")[var] = value; 
	return (object)view.CtrlVars("PGlobals")[var];
}
public System.Windows.Forms.Panel PContentGlobalVars;
public CView.CtrlStruct PContentGlobalVars_cstr;
public object PContentGlobalVars_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PContentGlobalVars")[var] = value; 
	return (object)view.CtrlVars("PContentGlobalVars")[var];
}
public System.Windows.Forms.ListBox LB_ProgramVars;
public CView.CtrlStruct LB_ProgramVars_cstr;
public object LB_ProgramVars_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("LB_ProgramVars")[var] = value; 
	return (object)view.CtrlVars("LB_ProgramVars")[var];
}
public System.Windows.Forms.ContextMenuStrip contextMenu_ProgramVars;
public CView.CtrlStruct contextMenu_ProgramVars_cstr;
public object contextMenu_ProgramVars_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("contextMenu_ProgramVars")[var] = value; 
	return (object)view.CtrlVars("contextMenu_ProgramVars")[var];
}
public System.Windows.Forms.Panel PTopGlobals;
public CView.CtrlStruct PTopGlobals_cstr;
public object PTopGlobals_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PTopGlobals")[var] = value; 
	return (object)view.CtrlVars("PTopGlobals")[var];
}
public System.Windows.Forms.Label label2;
public CView.CtrlStruct label2_cstr;
public object label2_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("label2")[var] = value; 
	return (object)view.CtrlVars("label2")[var];
}
public System.Windows.Forms.Panel PPrograms;
public CView.CtrlStruct PPrograms_cstr;
public object PPrograms_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PPrograms")[var] = value; 
	return (object)view.CtrlVars("PPrograms")[var];
}
public System.Windows.Forms.Panel PContentProgVars;
public CView.CtrlStruct PContentProgVars_cstr;
public object PContentProgVars_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PContentProgVars")[var] = value; 
	return (object)view.CtrlVars("PContentProgVars")[var];
}
public System.Windows.Forms.TreeView TV_GlobalsVars;
public CView.CtrlStruct TV_GlobalsVars_cstr;
public object TV_GlobalsVars_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("TV_GlobalsVars")[var] = value; 
	return (object)view.CtrlVars("TV_GlobalsVars")[var];
}
public System.Windows.Forms.ContextMenuStrip contextMenu_GlobalVars;
public CView.CtrlStruct contextMenu_GlobalVars_cstr;
public object contextMenu_GlobalVars_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("contextMenu_GlobalVars")[var] = value; 
	return (object)view.CtrlVars("contextMenu_GlobalVars")[var];
}
public System.Windows.Forms.Panel PTopProgVars;
public CView.CtrlStruct PTopProgVars_cstr;
public object PTopProgVars_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PTopProgVars")[var] = value; 
	return (object)view.CtrlVars("PTopProgVars")[var];
}
public System.Windows.Forms.Label label3;
public CView.CtrlStruct label3_cstr;
public object label3_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("label3")[var] = value; 
	return (object)view.CtrlVars("label3")[var];
}
public object Active_process { get { return (view.vars.ContainsKey("Active process"))? (object)view.vars["Active process"]: null; } set { view.vars["Active process"] = value; } }
public object Namespace_programa_activo { get { return (view.vars.ContainsKey("Namespace programa activo"))? (object)view.vars["Namespace programa activo"]: null; } set { view.vars["Namespace programa activo"] = value; } }
public object Fila_activa { get { return (view.vars.ContainsKey("Fila activa"))? (object)view.vars["Fila activa"]: null; } set { view.vars["Fila activa"] = value; } }
public CView view; 
public CFormProcesoActivo (CViewsManager vm) { view = (vm.getFirstView("GestorProcesos.FormProcesoActivo") != null)? vm.getFirstView("GestorProcesos.FormProcesoActivo"): vm.AddView("GestorProcesos.FormProcesoActivo");
FormProcesoActivo = (System.Windows.Forms.UserControl) view.getCtrl("GestorProcesos.FormProcesoActivo");
FormProcesoActivo_cstr = view.getCtrlStruct("GestorProcesos.FormProcesoActivo");
PFormProcesoActivo = (System.Windows.Forms.Panel) view.getCtrl("PFormProcesoActivo");
PFormProcesoActivo_cstr = view.getCtrlStruct("PFormProcesoActivo");
TBDescription = (System.Windows.Forms.TextBox) view.getCtrl("TBDescription");
TBDescription_cstr = view.getCtrlStruct("TBDescription");
LConfig = (System.Windows.Forms.DataGridView) view.getCtrl("LConfig");
LConfig_cstr = view.getCtrlStruct("LConfig");
LOutputs = (System.Windows.Forms.DataGridView) view.getCtrl("LOutputs");
LOutputs_cstr = view.getCtrlStruct("LOutputs");
LInputs = (System.Windows.Forms.DataGridView) view.getCtrl("LInputs");
LInputs_cstr = view.getCtrlStruct("LInputs");
BSave = (System.Windows.Forms.Button) view.getCtrl("BSave");
BSave_cstr = view.getCtrlStruct("BSave");
label10 = (System.Windows.Forms.Label) view.getCtrl("label10");
label10_cstr = view.getCtrlStruct("label10");
label9 = (System.Windows.Forms.Label) view.getCtrl("label9");
label9_cstr = view.getCtrlStruct("label9");
label8 = (System.Windows.Forms.Label) view.getCtrl("label8");
label8_cstr = view.getCtrlStruct("label8");
LName = (System.Windows.Forms.Label) view.getCtrl("LName");
LName_cstr = view.getCtrlStruct("LName");
label7 = (System.Windows.Forms.Label) view.getCtrl("label7");
label7_cstr = view.getCtrlStruct("label7");
label4 = (System.Windows.Forms.Label) view.getCtrl("label4");
label4_cstr = view.getCtrlStruct("label4");
PTop = (System.Windows.Forms.Panel) view.getCtrl("PTop");
PTop_cstr = view.getCtrlStruct("PTop");
PViews = (System.Windows.Forms.Panel) view.getCtrl("PViews");
PViews_cstr = view.getCtrlStruct("PViews");
PContentViewsVars = (System.Windows.Forms.Panel) view.getCtrl("PContentViewsVars");
PContentViewsVars_cstr = view.getCtrlStruct("PContentViewsVars");
TV_ViewsVars = (System.Windows.Forms.TreeView) view.getCtrl("TV_ViewsVars");
TV_ViewsVars_cstr = view.getCtrlStruct("TV_ViewsVars");
contextMenu_ViewVars = (System.Windows.Forms.ContextMenuStrip) view.getCtrl("contextMenu_ViewVars");
contextMenu_ViewVars_cstr = view.getCtrlStruct("contextMenu_ViewVars");
PTopViews = (System.Windows.Forms.Panel) view.getCtrl("PTopViews");
PTopViews_cstr = view.getCtrlStruct("PTopViews");
label1 = (System.Windows.Forms.Label) view.getCtrl("label1");
label1_cstr = view.getCtrlStruct("label1");
PGlobals = (System.Windows.Forms.Panel) view.getCtrl("PGlobals");
PGlobals_cstr = view.getCtrlStruct("PGlobals");
PContentGlobalVars = (System.Windows.Forms.Panel) view.getCtrl("PContentGlobalVars");
PContentGlobalVars_cstr = view.getCtrlStruct("PContentGlobalVars");
LB_ProgramVars = (System.Windows.Forms.ListBox) view.getCtrl("LB_ProgramVars");
LB_ProgramVars_cstr = view.getCtrlStruct("LB_ProgramVars");
contextMenu_ProgramVars = (System.Windows.Forms.ContextMenuStrip) view.getCtrl("contextMenu_ProgramVars");
contextMenu_ProgramVars_cstr = view.getCtrlStruct("contextMenu_ProgramVars");
PTopGlobals = (System.Windows.Forms.Panel) view.getCtrl("PTopGlobals");
PTopGlobals_cstr = view.getCtrlStruct("PTopGlobals");
label2 = (System.Windows.Forms.Label) view.getCtrl("label2");
label2_cstr = view.getCtrlStruct("label2");
PPrograms = (System.Windows.Forms.Panel) view.getCtrl("PPrograms");
PPrograms_cstr = view.getCtrlStruct("PPrograms");
PContentProgVars = (System.Windows.Forms.Panel) view.getCtrl("PContentProgVars");
PContentProgVars_cstr = view.getCtrlStruct("PContentProgVars");
TV_GlobalsVars = (System.Windows.Forms.TreeView) view.getCtrl("TV_GlobalsVars");
TV_GlobalsVars_cstr = view.getCtrlStruct("TV_GlobalsVars");
contextMenu_GlobalVars = (System.Windows.Forms.ContextMenuStrip) view.getCtrl("contextMenu_GlobalVars");
contextMenu_GlobalVars_cstr = view.getCtrlStruct("contextMenu_GlobalVars");
PTopProgVars = (System.Windows.Forms.Panel) view.getCtrl("PTopProgVars");
PTopProgVars_cstr = view.getCtrlStruct("PTopProgVars");
label3 = (System.Windows.Forms.Label) view.getCtrl("label3");
label3_cstr = view.getCtrlStruct("label3");
 }}

}

