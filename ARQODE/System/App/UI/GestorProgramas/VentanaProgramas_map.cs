using System; 
using TControls; 
using Newtonsoft.Json.Linq;

namespace TLogic.ARQODE_UI.GestorProgramas
 { 
public class CVentanaProgramas
 { 
public static String _JSON { get { return ""; } }
public JObject MappedView { get { return JObject.Parse(System.Text.UTF8Encoding.UTF8.GetString(Convert.FromBase64String(_JSON))); } } 
public System.Windows.Forms.Form VentanaProgramas;
public CView.CtrlStruct VentanaProgramas_cstr;
public object VentanaProgramas_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("GestorProgramas.VentanaProgramas")[var] = value; 
	return (object)view.CtrlVars("GestorProgramas.VentanaProgramas")[var];
}
public System.Windows.Forms.Panel PProcesses;
public CView.CtrlStruct PProcesses_cstr;
public object PProcesses_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PProcesses")[var] = value; 
	return (object)view.CtrlVars("PProcesses")[var];
}
public System.Windows.Forms.Panel PTop;
public CView.CtrlStruct PTop_cstr;
public object PTop_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PTop")[var] = value; 
	return (object)view.CtrlVars("PTop")[var];
}
public System.Windows.Forms.Panel PListaProcesos;
public CView.CtrlStruct PListaProcesos_cstr;
public object PListaProcesos_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PListaProcesos")[var] = value; 
	return (object)view.CtrlVars("PListaProcesos")[var];
}
public System.Windows.Forms.DataGridView ListaProcesos;
public CView.CtrlStruct ListaProcesos_cstr;
public object ListaProcesos_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("ListaProcesos")[var] = value; 
	return (object)view.CtrlVars("ListaProcesos")[var];
}
public System.Windows.Forms.ContextMenuStrip contextMenu_LProcesos;
public CView.CtrlStruct contextMenu_LProcesos_cstr;
public object contextMenu_LProcesos_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("contextMenu_LProcesos")[var] = value; 
	return (object)view.CtrlVars("contextMenu_LProcesos")[var];
}
public System.Windows.Forms.Panel PanelArbolProgramas;
public CView.CtrlStruct PanelArbolProgramas_cstr;
public object PanelArbolProgramas_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("PanelArbolProgramas")[var] = value; 
	return (object)view.CtrlVars("PanelArbolProgramas")[var];
}
public System.Windows.Forms.TreeView ArbolProgramas;
public CView.CtrlStruct ArbolProgramas_cstr;
public object ArbolProgramas_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("ArbolProgramas")[var] = value; 
	return (object)view.CtrlVars("ArbolProgramas")[var];
}
public System.Windows.Forms.ContextMenuStrip contextMenu_Programas;
public CView.CtrlStruct contextMenu_Programas_cstr;
public object contextMenu_Programas_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("contextMenu_Programas")[var] = value; 
	return (object)view.CtrlVars("contextMenu_Programas")[var];
}
public System.Windows.Forms.ToolStrip MenuTop;
public CView.CtrlStruct MenuTop_cstr;
public object MenuTop_vars(String var, object value = null) 
{ 
	if (value != null)  view.CtrlVars("MenuTop")[var] = value; 
	return (object)view.CtrlVars("MenuTop")[var];
}
public object Procesos_programa_activo { get { return (view.vars.ContainsKey("Procesos programa activo"))? (object)view.vars["Procesos programa activo"]: null; } set { view.vars["Procesos programa activo"] = value; } }
public object Namespace_programa_activo { get { return (view.vars.ContainsKey("Namespace programa activo"))? (object)view.vars["Namespace programa activo"]: null; } set { view.vars["Namespace programa activo"] = value; } }
public object Fila_activa_lista_procesos { get { return (view.vars.ContainsKey("Fila activa lista procesos"))? (object)view.vars["Fila activa lista procesos"]: null; } set { view.vars["Fila activa lista procesos"] = value; } }
public object App_activa { get { return (view.vars.ContainsKey("App activa"))? (object)view.vars["App activa"]: null; } set { view.vars["App activa"] = value; } }
public object Proceso_de_programa_activo { get { return (view.vars.ContainsKey("Proceso de programa activo"))? (object)view.vars["Proceso de programa activo"]: null; } set { view.vars["Proceso de programa activo"] = value; } }
public object Historico_de_programas { get { return (view.vars.ContainsKey("Histórico de programas"))? (object)view.vars["Histórico de programas"]: null; } set { view.vars["Histórico de programas"] = value; } }
public object Aplicacion_activa { get { return (view.vars.ContainsKey("Aplicación activa"))? (object)view.vars["Aplicación activa"]: null; } set { view.vars["Aplicación activa"] = value; } }
public o_OpenXML_Document OpenXML_Document;
public o_Cargar_arbol_recursivo Cargar_arbol_recursivo;
public CView view; 
public CVentanaProgramas (CViewsManager vm) { view = (vm.getFirstView("GestorProgramas.VentanaProgramas") != null)? vm.getFirstView("GestorProgramas.VentanaProgramas"): vm.AddView("GestorProgramas.VentanaProgramas");
VentanaProgramas = (System.Windows.Forms.Form) view.getCtrl("GestorProgramas.VentanaProgramas");
VentanaProgramas_cstr = view.getCtrlStruct("GestorProgramas.VentanaProgramas");
PProcesses = (System.Windows.Forms.Panel) view.getCtrl("PProcesses");
PProcesses_cstr = view.getCtrlStruct("PProcesses");
PTop = (System.Windows.Forms.Panel) view.getCtrl("PTop");
PTop_cstr = view.getCtrlStruct("PTop");
PListaProcesos = (System.Windows.Forms.Panel) view.getCtrl("PListaProcesos");
PListaProcesos_cstr = view.getCtrlStruct("PListaProcesos");
ListaProcesos = (System.Windows.Forms.DataGridView) view.getCtrl("ListaProcesos");
ListaProcesos_cstr = view.getCtrlStruct("ListaProcesos");
contextMenu_LProcesos = (System.Windows.Forms.ContextMenuStrip) view.getCtrl("contextMenu_LProcesos");
contextMenu_LProcesos_cstr = view.getCtrlStruct("contextMenu_LProcesos");
PanelArbolProgramas = (System.Windows.Forms.Panel) view.getCtrl("PanelArbolProgramas");
PanelArbolProgramas_cstr = view.getCtrlStruct("PanelArbolProgramas");
ArbolProgramas = (System.Windows.Forms.TreeView) view.getCtrl("ArbolProgramas");
ArbolProgramas_cstr = view.getCtrlStruct("ArbolProgramas");
contextMenu_Programas = (System.Windows.Forms.ContextMenuStrip) view.getCtrl("contextMenu_Programas");
contextMenu_Programas_cstr = view.getCtrlStruct("contextMenu_Programas");
MenuTop = (System.Windows.Forms.ToolStrip) view.getCtrl("MenuTop");
MenuTop_cstr = view.getCtrlStruct("MenuTop");
OpenXML_Document = new o_OpenXML_Document(view);
Cargar_arbol_recursivo = new o_Cargar_arbol_recursivo(view);
 }}
public class o_OpenXML_Document
{
CView view = null;
public CView.ObjStruct Obj_str { get { return view.getObjStruct("OpenXML Document"); } }
public o_OpenXML_Document(CView v) { view = v; }
public object Create_word_document()
{
return view.MethodCall("OpenXML Document", "Create word document", null);
}
public object Create_word_document(object file_path, object rtfEncodedString)
{
return view.MethodCall("OpenXML Document", "Create word document", new object[] { file_path, rtfEncodedString });
}
}
public class o_Cargar_arbol_recursivo
{
CView view = null;
public CView.ObjStruct Obj_str { get { return view.getObjStruct("Cargar arbol recursivo"); } }
public o_Cargar_arbol_recursivo(CView v) { view = v; }
public object Crear_arbol_desde_carpeta()
{
return view.MethodCall("Cargar arbol recursivo", "Crear arbol desde carpeta", null);
}
public object Crear_arbol_desde_carpeta(object path, object Omit_files_and_dir_list)
{
return view.MethodCall("Cargar arbol recursivo", "Crear arbol desde carpeta", new object[] { path, Omit_files_and_dir_list });
}
public object Crear_lista_de_nodos_hoja_del_arbol()
{
return view.MethodCall("Cargar arbol recursivo", "Crear lista de nodos hoja del árbol", null);
}
public object Crear_lista_de_nodos_hoja_del_arbol(object arbol_origen)
{
return view.MethodCall("Cargar arbol recursivo", "Crear lista de nodos hoja del árbol", new object[] { arbol_origen });
}
}

}

